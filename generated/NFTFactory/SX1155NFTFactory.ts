// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ChainWikiDeployed extends ethereum.Event {
  get params(): ChainWikiDeployed__Params {
    return new ChainWikiDeployed__Params(this);
  }
}

export class ChainWikiDeployed__Params {
  _event: ChainWikiDeployed;

  constructor(event: ChainWikiDeployed) {
    this._event = event;
  }

  get deployedAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenParams(): ChainWikiDeployedTokenParamsStruct {
    return changetype<ChainWikiDeployedTokenParamsStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }

  get admin(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get editor(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ChainWikiDeployedTokenParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get kya(): string {
    return this[2].toString();
  }
}

export class SX1155NFTFactory__deployChainWikiInputTokenParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get kya(): string {
    return this[2].toString();
  }
}

export class SX1155NFTFactory extends ethereum.SmartContract {
  static bind(address: Address): SX1155NFTFactory {
    return new SX1155NFTFactory("SX1155NFTFactory", address);
  }

  deployChainWiki(
    tokenParams: SX1155NFTFactory__deployChainWikiInputTokenParamsStruct,
    _admin: Address,
    _editor: Address,
  ): Address {
    let result = super.call(
      "deployChainWiki",
      "deployChainWiki((string,string,string),address,address):(address)",
      [
        ethereum.Value.fromTuple(tokenParams),
        ethereum.Value.fromAddress(_admin),
        ethereum.Value.fromAddress(_editor),
      ],
    );

    return result[0].toAddress();
  }

  try_deployChainWiki(
    tokenParams: SX1155NFTFactory__deployChainWikiInputTokenParamsStruct,
    _admin: Address,
    _editor: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployChainWiki",
      "deployChainWiki((string,string,string),address,address):(address)",
      [
        ethereum.Value.fromTuple(tokenParams),
        ethereum.Value.fromAddress(_admin),
        ethereum.Value.fromAddress(_editor),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DeployChainWikiCall extends ethereum.Call {
  get inputs(): DeployChainWikiCall__Inputs {
    return new DeployChainWikiCall__Inputs(this);
  }

  get outputs(): DeployChainWikiCall__Outputs {
    return new DeployChainWikiCall__Outputs(this);
  }
}

export class DeployChainWikiCall__Inputs {
  _call: DeployChainWikiCall;

  constructor(call: DeployChainWikiCall) {
    this._call = call;
  }

  get tokenParams(): DeployChainWikiCallTokenParamsStruct {
    return changetype<DeployChainWikiCallTokenParamsStruct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get _admin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _editor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class DeployChainWikiCall__Outputs {
  _call: DeployChainWikiCall;

  constructor(call: DeployChainWikiCall) {
    this._call = call;
  }

  get newSx1155(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class DeployChainWikiCallTokenParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get kya(): string {
    return this[2].toString();
  }
}
